{"ast":null,"code":"import _slicedToArray from\"C:/Users/ABHIJIT/OneDrive/Desktop/E_Commers/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckouSteps';import{savePaymentMethod}from'../actions/cartAction';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}var _useState=useState('Paypal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();console.log('Submit');dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\" Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Paypel or Credit Card\",id:\"Paypel\",name:\"paymentMethod\",value:\"Paypel\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",varient:\"parimary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["C:/Users/ABHIJIT/OneDrive/Desktop/E_Commers/frontend/src/Screen/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","console","log","target","value"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,OAASC,iBAAT,KAAkC,uBAAlC,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACrC,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CADqC,GAG7BE,CAAAA,eAH6B,CAGTF,IAHS,CAG7BE,eAH6B,CAKrC,GAAI,CAACA,eAAL,CAAsB,CACpBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACD,CAPoC,cAQKd,QAAQ,CAAC,QAAD,CARb,wCAQ9Be,aAR8B,eAQfC,gBARe,eAUrC,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACA,GAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAL,QAAQ,CAACT,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CAEAL,OAAO,CAACI,IAAR,CAAa,aAAb,EACD,CAND,CAQA,mBACE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADF,cAEE,sCAFF,cAGE,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,4BADF,cAGE,KAAC,GAAD,wBACE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,uBAFR,CAGE,EAAE,CAAC,QAHL,CAIE,IAAI,CAAC,eAJP,CAKE,KAAK,CAAC,QALR,CAME,OAAO,KANT,CAOE,QAAQ,CAAE,kBAACC,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACI,MAAF,CAASC,KAAV,CAAvB,EAPZ,EADF,EAHF,GADF,cAgBE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,UAA9B,sBAhBF,GAHF,GADF,CA0BD,CA7CD,CA+CA,cAAef,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckouSteps'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress) {\r\n    history.push('/shipping')\r\n  }\r\n  const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n  const dispatch = useDispatch()\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    console.log('Submit')\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'> Select Method</Form.Label>\r\n\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Paypel or Credit Card'\r\n              id='Paypel'\r\n              name='paymentMethod'\r\n              value='Paypel'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type='submit' varient='parimary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n"]},"metadata":{},"sourceType":"module"}